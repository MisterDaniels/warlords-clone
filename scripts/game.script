local List = require 'scripts.modules.list-utils'

local constants = require('data/constants')

function init(self)
	go.property('player_side', hash('left'))
	go.property('lines', 5)
	self.selected_line = 1
	self.selected_unity = 1
	self.unities_available = {1, 2}
	self.unities_time = {}

	msg.post('.', 'acquire_input_focus')

	json_file = sys.load_resource('/res/data/unity.json')
	data = json.decode(json_file)
	self.unity = data.unities

	msg.post('/unity-spawner#unity-spawner', 'spawn', {
		side = hash('right'),
		line = 1,
		line_quantity = self.lines,
		unity_id = 1
	})
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	
end

function fixed_update(self, dt)
	-- This function is only called if 'Use Fixed Timestep' is enabled in the Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action.pressed then
		if action_id == hash('move-up') then
			if self.selected_line == self.lines then
				self.selected_line = 1
			else
				self.selected_line = self.selected_line + 1
			end

			moved_y_axis = true
		end

		if action_id == hash('move-down') then
			if self.selected_line == 1 then
				self.selected_line = self.lines
			else
				self.selected_line = self.selected_line - 1
			end

			moved_y_axis = true
		end

		if action_id == hash('move-right') then
			if self.selected_unity == #self.unities_available then
				self.selected_unity = 1
			else
				self.selected_unity = self.selected_unity + 1
			end

			moved_x_axis = true
		end
		
		if action_id == hash('move-left') then
			if self.selected_unity == 1 then
				self.selected_unity = #self.unities_available
			else
				self.selected_unity = self.selected_unity - 1
			end
				
			moved_x_axis = true
		end
		
		if moved_y_axis then
			pos = vmath.vector3(constants.UNIT_SIZE, (self.selected_line * constants.UNIT_SIZE) + constants.UNIT_SIZE / 2, 0)
			go.set_position(pos, '/cursor#unity')
			go.set('/cursor#unity', 'tint.w', 0.4)
		end

		if moved_x_axis then
			sprite.play_flipbook('/cursor#unity', hash(self.unity[self.selected_unity].source))
		end
		
		if action_id == hash('action') then
			unity_id = self.unities_available[self.selected_unity]

			if List.isInList(self.unities_time, unity_id) then
				return
			end

			index = table.insert(self.unities_time, {
				id = unity_id,
				time = 2,
				timer = timer.delay(self.unity[self.selected_unity].time_to_spawn, false, function()
					table.remove(self.unities_time, index)
				end)
			})

			msg.post('/unity-spawner#unity-spawner', 'spawn', {
				side = hash('left'),
				line = self.selected_line,
				line_quantity = self.lines,
				unity_id = unity_id
			})
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end